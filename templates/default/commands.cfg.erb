# Command definitions
# Automatically generated by Chef

define command {
  command_name  host-notify-by-email
  command_line  /usr/bin/printf "%b" "***** Icinga <%= node.chef_environment %> *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "Host $HOSTSTATE$ alert for $HOSTNAME$!" $CONTACTEMAIL$
}

define command{
  command_name  notify-by-email
  command_line  /usr/bin/printf "%b" "***** Icinga <%= node.chef_environment %> *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ alert - $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}

define command {
  command_name  host-notify-by-sms-email
  command_line  /usr/bin/printf "%b" "$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$" | /bin/mail -s "$HOSTALIAS$ $HOSTSTATE$!" $CONTACTPAGER$
}

define command {
       command_name check_dummy
       command_line /usr/lib/nagios/plugins/check_dummy $ARG1$ $ARG2$
}

define command {
    command_name check_rabbitmq_queue_length
    command_line check_rabbitmq_queue_length -w 10000 -c 20000 -v
}

define command {
    command_name check-nagios
    command_line $USER1$/check_nagios -F /var/cache/icinga/status.dat -e 4 -C /usr/sbin/icinga
}

<% @icinga_conf.each do |role, conf| -%>
# commands for the <%= role %> role
  <% if conf['commands'] and conf['commands'].length() %>
# found <%=conf['commands'].length()%> commands for the <%= role %> role
    <% conf['commands'].each do |name, command| -%>
define command {
      <% command.each do |key, value| -%>
  <%= key %> <%= if value.kind_of?(Array) then value.join(', ') else value end %>
      <% end %>
}
    <% end %>
  <% end %>
<% end %>

